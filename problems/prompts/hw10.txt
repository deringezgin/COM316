
Frames

Intro:  Although we have some more organization, we still have a scattering
of links.  More structure in our organization would help us use the isa
links for inheritance.  Frames were developed to help in this regard.  They
describe objects in a data structure that looks like a record that can have
several fields.  An example might be
(chair
    (isa furniture-item)
    (function sit-on)
    (made-of wood))
This frame describes the category chair.  The frame is made up of slots and
fillers, isa is a slot and furniture-item is a filler.  Inheritance allows
us to inherit characteristics from categories higher in the hierarchy.  If
all furniture in our world was made of wood, we could leave that out of the
frame and inherit it when needed by following the isa links until we found
it.  Our frame could be:
(chair
    (isa furniture-item)
    (function sit-on))
Higher frames can give normal fillers that can be altered at a lower level.
They can also include slots that may not have a filler at that level (such
as color).  Color may not be known until we are talking about the specific
object.  Rules to reason with frames, create new instances, or fill slots
will be required in a frame system.

Problem One: Use frames to represent the info in ZooKeeper.  Add a few
more frames to be able to represent a house cat, a songbird, and cartoon
characters.  Create an instance of a zebra and a house cat.  Also do Tweety
and Sylvester.  Specify how you deal with situations where there is more
than one category applicable to an object; which category does it inherit
from?  Does it get info from both?  What if there is a conflict?  Can we
handle continuous filler values?  

Problem Two:  Frames can also be used to represent verbs.  In this case the
verb is the name of the frame and the slots are what is needed to go with
the verb to express the thought.  For example consider the statement:
Bill hit Joe.
This sentence can be represented by the frame:
(hit
  (agent Bill)
  (recipient Joe)
  (object-used))  
Note a few things.  The object-used slot is needed to go with hit even 
though in this case there is no filler; although we could assume hand.
By representing a sentence like this, we are making it accessible to the
computer (our artificial intelligence) for reasoning.
Now consider the sentence:
Bill struck Joe.
This sentence can be represented by the frame:
(struck
  (agent Bill)
  (recipient Joe)
  (object-used))  
Wouldn't we want the computer to reason in the same way for struck and hit?
Actually, there could be several verbs that mean much the same.  We should 
come up with one verb that covers them all.  It would be nice to reduce the 
total number of possible verbs to as little as possible.  Plus we would like 
our slot names to be as consistent as possible.
Represent the following sentences in frames:
Suzie told Robbie to put the wedge on the red block.
Robbie was unhappy because of the poor grade he received on a test.
Joe moved the car to the garage. 
Suzie hit Robbie, which made him sad.

No 3q.
						

