
AI Programming Assignment 7.  Production Systems

Describe a production system that we can use to solve our search
problem.  In this case we initially know nothing about the grid except
what our x,y position is and the x,y position of the goal (you can now
use this info).  You can assume that we have a function that returns
all applicable facts about each adjacent block: obstacle (yes or no),
high (yes or no), and stable (yes or no).  Note: the second two are
only applicable when the block is an obstacle.

I have written a working program that you can copy.  It is not complete 
because it needs some rule modifications to not get stuck and more 
rules to allow it to go over low stable obstacles. First work on not 
getting stuck.  As you can see, I used a path predicate to help 
identify the path.  However, it does not always work.  Run it a few 
times and you'll see that the robot does not always search everyplace 
where it can reach.  You may want to increase the obstacle density to 
help see.  Observe it carefully.  Does it really backtrack?  If not,
how can you fix the rules so that it does?  No new rules are needed at
this point.  There is just a problem with the current rules.  After 
fixing this, consider how to add the production rules needed to allow it 
to go over low stable obstacles. You do not need to change anything in 
this program except the rules. There are certain problems you must be 
careful to address, such as conflict resolution.  If several rules can 
fire, which one should be the one to fire?  As you can see, I added 
predicates that just control what happens next.

After you have completed the above assignment, the robot should be able 
to find the goal if a path over free and/or low stable obstacles exists. 
If it does not exist, the robot should return to the starting position 
and stop there.  

Although the robot can find the goal, it favors free spaces over low 
stable obstacles, even if it means moving away from the goal. Alter the 
rules to make the robot move to the best next block, paying no attention 
to whether it is free or a low stable obstacle. 

Submit two files.  One where the robot favors free spaces over low 
stable obstacles.  The other where the robot moves to the best adjacent 
passable block to get it closer to the goal. And a remember, there can't 
be any "or"s in your rules.
