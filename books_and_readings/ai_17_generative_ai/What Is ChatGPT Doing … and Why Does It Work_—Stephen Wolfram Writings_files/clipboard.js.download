$(document).ready(function() {
    var delay = 0,
        setTimeoutConst,
        tapFlag;
    $(document).on({
        'mouseenter': function() {
            var inCell = $(this);
            delay = 0;
            display_copy_message(inCell, 'mouseenter');
        },
        'mouseleave': function() {
            clearTimeout(setTimeoutConst);
            $('.InCell .tooltip, .InCell .clipboard').remove();
            $(this).removeClass('hover');
        },
        'mouseup': function() {
            exec_copy($(this), 'mouseup');
        },
        'touchstart': function(e) {
            var inCell = $(this);
            display_copy_message(inCell, 'touchstart');
            tapFlag = true;
        },
        'touchend': function(e) {
            if (tapFlag) {
                exec_copy($(this), 'tounchend');
            }
            tapFlag = false;
        },
        'touchmove': function(e) {
            $('.InCell .clipboard, .InCell .tooltip').remove();
        },
    }, '.InCell');

    function display_copy_message(inCell, event) {
        if (event == 'mouseenter') {
            inCell.find('.IFL').after('<div class="clipboard"></div>');
            setTimeoutConst = setTimeout(function() {
                inCell.find('.clipboard').after('<div class="tooltip">Copy input to clipboard.</div>');
                inCell.addClass('hover');
                if (event == 'mouseenter') {
                    var visible = $('.InCell .tooltip').isOnScreen(0.5, 0.5);
                    if (visible) {
                        $('.InCell .tooltip').removeClass('bottom');
                    } else {
                        $('.InCell .tooltip').addClass('bottom');
                    }
                }
            }, delay);
        }
    }
    var select_copy_text = function(el) {
        var doc = window.document,
            sel, range;
        var local_el = document.getElementById(el);
        if (window.getSelection && doc.createRange) {
            sel = window.getSelection();
            sel.removeAllRanges();
            range = doc.createRange();
            range.selectNodeContents(local_el);
            sel.addRange(range);
        } else if (doc.body.createTextRange) {
            range = doc.body.createTextRange();
            range.moveToElementText(local_el);
            range.select();
        }
    };

    function exec_copy(element, event) {
        var findText = element.find('.text').prop('id');
        select_copy_text(element.find('.text').prop('id'));
        if (document.queryCommandSupported('copy')) {
            var success = document.execCommand('copy');
            if (success) {
                // mark as copied
                $('.InCell .tooltip').text('Copied!');
                element.find('.clipboard').addClass('copied');
                if ($('.InCell .tooltip').length == 0) {
                    element.find('.InCell .clipboard').after('<div class="tooltip">Copied!</div>');
                }
            } else {
                setTimeout(function() {
                    // mark as not copied
                    element.find('.InCell .clipboard').after('<div class="tooltip">Unable to copy.</div>');
                    select_copy_text(element.find('.text').prop('id'));
                }, 300);
            }
        } else {
            // show code and let user copy it manually; for safari 
            $('.IFL').removeClass('show');
            element.find('.IFL').addClass('show');
            $('.InCell .tooltip').remove();
            $(document).on(event, '.close', function(e) {
                e.stopPropagation();
                element.parents('.IFL').removeClass('show');
            });
        }
    }
    /* load external files
    ============================================================*/
    var externalClipboardCounter = 0;
    var externalClipboardInputs = [];
    var externalClipboardHandlerRunning = false;
    var findExternalClipboardInputs = function() {
        $('.InCell').each(function() {
            var url = $(this).find('.IFL')[0].dataset.src;
            var id = $(this).find('.text')[0].id;
            var val = document.getElementById(id).innerHTML;
            if (typeof url !== 'undefined' && val == '') {
                externalClipboardCounter++;
                var displayId = 'c2c_display' + externalClipboardCounter;
                $(this).prop('id', displayId);
                externalClipboardInputs.push({
                    displayId: displayId,
                    id: id,
                    url: url
                });
            }
        });
    };
    var externalClipboardHandler = function() {
        if (externalClipboardHandlerRunning) {
            return;
        }
        externalClipboardHandlerRunning = true;
        var loadPoint = window.innerHeight + 500;
        for (var i = 0; i < externalClipboardInputs.length; i++) {
            var id = externalClipboardInputs[i].displayId;
            var offset = document.getElementById(id).getBoundingClientRect().top;
            if (offset <= loadPoint) {
                loadExternalClipboard(externalClipboardInputs[i].id, externalClipboardInputs[i].url);
                externalClipboardInputs.splice(i, 1);
                i--;
            }
        }
        externalClipboardHandlerRunning = false;
    };
    var loadExternalClipboard = function(id, url) {
        $.ajax({
            url: url,
            dataType: "text",
            success: function(data) {
                document.getElementById(id).innerHTML = data;
            }
        });
    };
    findExternalClipboardInputs();
    externalClipboardHandler();
    $(window).on('scroll resize orientationchange', externalClipboardHandler);
});
$.fn.isOnScreen = function() {
    var element = this.get(0);
    var bounds = element.getBoundingClientRect();
    return bounds.top < window.innerHeight && bounds.bottom > 0;
};